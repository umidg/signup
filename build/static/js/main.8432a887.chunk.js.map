{"version":3,"sources":["utilities/apicaller.js","api/api.js","components/formelements/button.js","components/formelements/input.js","components/signup.js","App.js","serviceWorker.js","index.js"],"names":["config","headers","callApi","method","endpoint","body","a","axios","post","then","res","catch","error","console","log","alert","checkUser","signup","myButton","props","type","className","onClick","handleClick","label","myInput","name","placeholder","onChange","value","children","htmlFor","id","style","border","color","defaultProps","SignUpPage","state","campaignUuid","data","firstname","lastname","email","password","errors","submitted","handleChange","event","target","setState","onSubmit","reg","err","checkuser","test","length","Object","getOwnPropertyNames","api","status","firstName","lastName","ress","this","required","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8432a887.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SERVER_URL = \"https://api.raisely.com/v3/\";\r\nconst config = {\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n};\r\n\r\nexport const callApi = async (method, endpoint, body) => {\r\n  return axios\r\n    .post(SERVER_URL + endpoint, body, config)\r\n    .then((res) => res)\r\n    .catch((error) => {\r\n      console.log(error);\r\n      alert(\"Ran into a problem. Please try again after sometime.\");\r\n      return \"sorry\";\r\n    });\r\n};\r\n","import { callApi } from \"../utilities/apicaller\";\r\n\r\nexport const checkUser = (body) => {\r\n  return callApi(\"post\", \"check-user\", body);\r\n};\r\n\r\nexport const signup = (body) => {\r\n  return callApi(\"post\", \"signup\", body);\r\n};\r\n","import React from \"react\";\r\n\r\nconst myButton = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      className={props.className}\r\n      onClick={props.handleClick}\r\n    >\r\n      {props.label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default myButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst myInput = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  value,\r\n  error,\r\n  children,\r\n  label,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        className={className}\r\n        style={error && { border: \"solid 1px #f9acac\" }}\r\n      />\r\n      {error ? <p style={{ color: \" #ff4444\" }}>{error}</p> : <p>&nbsp;</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nmyInput.defaultProps = {\r\n  type: \"text\",\r\n  className: \"\",\r\n};\r\n\r\nmyInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf([\"text\", \"number\", \"password\", \"email\"]),\r\n  className: PropTypes.string,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default myInput;\r\n","import React from \"react\";\r\nimport * as api from \"../api/api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport MyButton from \"./formelements/button\";\r\nimport MyInput from \"./formelements/input\";\r\n\r\nclass SignUpPage extends React.Component {\r\n  state = {\r\n    campaignUuid: \"\",\r\n    data: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n    submitted: false,\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      // campaignUuid: uuidv4(),\r\n      campaignUuid: \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { data } = this.state;\r\n    data[event.target.name] = event.target.value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  onSubmit = async () => {\r\n    const {\r\n      campaignUuid,\r\n      data: { firstname, lastname, email, password },\r\n    } = this.state;\r\n    const reg = /\\S+@\\S+\\.\\S+/;\r\n    let err = {};\r\n\r\n    let checkuser = {\r\n      campaignUuid,\r\n      data: { email },\r\n    };\r\n\r\n    if (!firstname) {\r\n      err.firstname = \"Enter your first name!\";\r\n    }\r\n    if (!lastname) {\r\n      err.lastname = \"Enter your last name!\";\r\n    }\r\n    if (!email) {\r\n      err.email = \"Enter your email address!\";\r\n    } else if (!reg.test(email)) {\r\n      err.email = \"Enter a valid email address!\";\r\n    }\r\n    if (password.length < 8) {\r\n      err.password = \"Password must be at least 8 characters!\";\r\n    }\r\n    this.setState({\r\n      errors: err,\r\n    });\r\n    console.log(err, Object.getOwnPropertyNames(err).length);\r\n    if (Object.getOwnPropertyNames(err).length === 0) {\r\n      console.log(checkuser, \"checkuser\");\r\n      await api.checkUser(checkuser).then((res) => {\r\n        console.log(res.data.data.status, \"res\");\r\n        if (res != \"sorry\")\r\n          if (res.data.data.status == \"EXISTS\") {\r\n            err.email = \"Already exists. Please use any other email!\";\r\n            this.setState({ errors: err });\r\n            console.log(this.state, \"already exists\", res);\r\n          } else if (res.data.data.status == \"OK\") {\r\n            checkuser.data.firstName = firstname;\r\n            checkuser.data.lastName = lastname;\r\n            checkuser.data.password = password;\r\n\r\n            console.log(checkuser, \"check\");\r\n\r\n            api.signup(checkuser).then((ress) => {\r\n              if (ress != \"sorry\") alert(\"Thank you for applying!\");\r\n              console.log(ress);\r\n            });\r\n\r\n            this.setState({\r\n              data: {\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n              },\r\n              submitted: false,\r\n              errors: {},\r\n            });\r\n            console.log(this.state);\r\n          }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      submitted,\r\n      errors,\r\n      data: { firstname, lastname, email, password },\r\n    } = this.state;\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"container\">\r\n          {submitted ? (\r\n            <span>Welcome onboard, {firstname}!</span>\r\n          ) : (\r\n            <>\r\n              <h2>Sign Up</h2>\r\n              <h6>All the fields are required</h6>\r\n              <MyInput\r\n                label=\"First Name\"\r\n                name=\"firstname\"\r\n                type=\"text\"\r\n                value={firstname}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter firstname...\"\r\n                error={errors.firstname}\r\n                required\r\n                className=\"input\"\r\n              />\r\n              <MyInput\r\n                label=\"Last Name\"\r\n                name=\"lastname\"\r\n                type=\"text\"\r\n                value={lastname}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter lastname...\"\r\n                error={errors.lastname}\r\n                required\r\n                className=\"input\"\r\n              />\r\n              <MyInput\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter email...\"\r\n                error={errors.email}\r\n                required\r\n                className=\"input\"\r\n              />\r\n\r\n              <MyInput\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter password...\"\r\n                error={errors.password}\r\n                className=\"input\"\r\n                required\r\n              />\r\n\r\n              <MyButton\r\n                type=\"submit\"\r\n                label=\"Submit\"\r\n                className=\"button\"\r\n                handleClick={this.onSubmit}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport SignUp from \"./components/signup\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <SignUp />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}